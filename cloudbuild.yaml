# Cloud Build configuration for deploying to Cloud Run
steps:
  # Step 1: Run tests
  - name: 'golang:1.21-alpine'
    entrypoint: 'sh'
    args:
      - '-c'
      - |
        apk add --no-cache git
        go mod download
        go test ./...
    id: 'test'

  # Step 2: Build Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '-t'
      - 'gcr.io/$PROJECT_ID/microservice-template:$COMMIT_SHA'
      - '-t'
      - 'gcr.io/$PROJECT_ID/microservice-template:latest'
      - '.'
    id: 'build'
    waitFor: ['test']

  # Step 3: Push image to Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - 'gcr.io/$PROJECT_ID/microservice-template:$COMMIT_SHA'
    id: 'push-sha'
    waitFor: ['build']

  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - 'gcr.io/$PROJECT_ID/microservice-template:latest'
    id: 'push-latest'
    waitFor: ['build']

  # Step 4: Deploy to Cloud Run (staging)
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'sh'
    args:
      - '-c'
      - |
        # Replace PROJECT_ID placeholder in staging config
        sed 's/PROJECT_ID/$PROJECT_ID/g' deploy/cloudrun-staging.yaml > /tmp/cloudrun-staging.yaml
        # Deploy to Cloud Run
        gcloud run services replace /tmp/cloudrun-staging.yaml \
          --region=us-central1 \
          --platform=managed
    id: 'deploy-staging'
    waitFor: ['push-sha', 'push-latest']

  # Step 5: Deploy to Cloud Run (production) - only on main branch
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'sh'
    args:
      - '-c'
      - |
        if [ "$BRANCH_NAME" = "main" ] || [ "$BRANCH_NAME" = "master" ]; then
          # Replace PROJECT_ID placeholder in production config
          sed 's/PROJECT_ID/$PROJECT_ID/g' deploy/cloudrun-production.yaml > /tmp/cloudrun-production.yaml
          # Deploy to Cloud Run
          gcloud run services replace /tmp/cloudrun-production.yaml \
            --region=us-central1 \
            --platform=managed
          echo "Deployed to production"
        else
          echo "Skipping production deployment - not on main/master branch"
        fi
    id: 'deploy-production'
    waitFor: ['deploy-staging']

# Build options
options:
  logging: CLOUD_LOGGING_ONLY
  machineType: 'E2_HIGHCPU_8'

# Timeout for the entire build
timeout: '1200s'

# Images to be pushed to Container Registry
images:
  - 'gcr.io/$PROJECT_ID/microservice-template:$COMMIT_SHA'
  - 'gcr.io/$PROJECT_ID/microservice-template:latest'