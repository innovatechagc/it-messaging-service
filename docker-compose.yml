version: '3.8'

services:
  # Messaging Service
  app:
    build: .
    ports:
      - "8080:8080"
    environment:
      - ENVIRONMENT=development
      - PORT=8080
      - LOG_LEVEL=debug
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=messaging_service
      - DB_SSL_MODE=disable
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_ENABLED=true
      - JWT_SECRET=dev-jwt-secret-key-change-in-production
      - JWT_ISSUER=messaging-service
      - FILE_STORAGE_LOCAL_PATH=/app/uploads
      - EVENTS_PROVIDER=redis
      - EVENTS_TOPIC=message.events
    depends_on:
      - postgres
      - redis
    volumes:
      - uploads_data:/app/uploads
    networks:
      - microservice-network
    restart: unless-stopped

  # Base de datos PostgreSQL
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: messaging_service
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-messaging.sql:/docker-entrypoint-initdb.d/init-messaging.sql
    networks:
      - microservice-network
    restart: unless-stopped

  # Vault para manejo de secretos (desarrollo)
  vault:
    image: vault:1.15
    cap_add:
      - IPC_LOCK
    environment:
      VAULT_DEV_ROOT_TOKEN_ID: dev-token
      VAULT_DEV_LISTEN_ADDRESS: 0.0.0.0:8200
    ports:
      - "8200:8200"
    volumes:
      - vault_data:/vault/data
      - ./scripts/vault-init.sh:/vault/init.sh
    networks:
      - microservice-network
    restart: unless-stopped
    command: ["vault", "server", "-dev"]

  # Redis para caché (opcional)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - microservice-network
    restart: unless-stopped

  # Prometheus para métricas
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    networks:
      - microservice-network
    restart: unless-stopped

volumes:
  postgres_data:
  vault_data:
  redis_data:
  prometheus_data:
  uploads_data:

networks:
  microservice-network:
    driver: bridge